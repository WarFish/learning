# часть 9.1 задание 9.14
# Написать инструкцию с использованием включений в словарь для создания словаря, в котором каждый
# элемент содержит имя из списка names в качестве ключа и длину этого имени в качестве значения

names = ['Крис', 'Кэти',  'Джоанна', 'Курт']
set_names = {k:len(k) for k in names}
# print(set_names)

# часть 9.1 задание 9.15
# напишите инструкцию с использованием включения в словарь, для создания второго словаря,
# содержащего элементы телефонной книги phonebook, которые имеют значения начинающиеся с '919'

phonebook = {'Крис': '919-555-1111', 'Кэти': '828-555-2222',
             'Джоанна': '704-555-3333', 'Курт': '919-555-3333'
             }
phonebook_copy = {name:t_num for name,t_num in phonebook.items() if t_num[0:3] == '919'}
# print(phonebook_copy)

# часть 9.3 Алгоритмический тренажер 1
dct = {'a': 1, 'б': 2, 'в': 3}

# часть 9 Алгоритмический тренажер 2
dct = {}

# часть 9.3 Алгоритмический тренажер 3
if 'Джеймс' in dct: print(dct['Джеймс'])
else: print(f'Ключ Джеймс не найден в словаре')


# часть 9.3 Алгоритмический тренажер 4
if 'Джим' in dct: del dct['Джим']

# часть 9.3 Алгоритмический тренажер 5
my_set = {0, 20, 30, 40}
my_set = set([0, 20, 30, 40])

# часть 9.3 Алгоритмический тренажер 6
set3 = set1 | set2
set3 = set1.union(set2)

# часть 9.3 Алгоритмический тренажер 7
set3 = set1 & set2
set3 = set1.intersection(set2)

# часть 9.3 Алгоритмический тренажер 8
set3 = set1 - set2
set3 = set1.difference(set2)

# часть 9.3 Алгоритмический тренажер 9
set3 = set2 - set1
set3 = set2.difference(set1)

# часть 9.3 Алгоритмический тренажер 10
set3 = set2 ^ set1
set3 = set2.symmetric_difference(set1)

# часть 9.3 Алгоритмический тренажер 11
numbers = [1, 2, 3, 4, 5]
my_dct = {value : value * 10 for value in numbers}

# часть 9.3 Алгоритмический тренажер 12
test_averages = {'Джанель': 98, 'Сэм': 87, 'Дженнифер': 92, 'Томас': 74, 'Салли': 89, 'Зеб': 84}
high_scores = {k: v for k, v in test_averages.items() if v > 90}

# часть 9.3 Алгоритмический тренажер 13
import pickle
with open('mydata.dat', 'wb') as file:
    pickle.dump(dct, file)

# часть 9.3 Алгоритмический тренажер 14
import pickle
with open('mydata.dat', 'rb') as file:
    pickle.load(file)
