Данный файл содержит все задания из 8 главы книги:
Начинаем программировать на Python. 5-е издание
Автор: Тони Гэддис

*************************************************************************************************

Задача #1
Инициалы.
Напишите программу, которая получает строковое значение, содержащее имя, отчество и фамилию
человека и показывает инициалы. Например, если пользователь вводит Михаил Иванович Кузнецов,
то программа должна вывести М.И.К.

Решение в файле task_8_1.py

*************************************************************************************************

Задача #2
Сумма цифр в строке.
Напишите программу, которая просит пользователя ввести ряд однозначных чисел без разделителей.
Программа должна вывести на экран сумму всех однозначных чисел в строковом значении. Например,
если пользователь вводит 2514, то этот метод должен вернуть значение 12, которое является
суммой 2, 5, 1 и  4

Решение в файле task_8_2.py

*************************************************************************************************

Задача #3
Принтер дат.
Напишите программу, которая считывает от пользователя строковое значение, содержащее дату в
формате дд/мм/гггг. Она должна напечатать дату в формате 12 марта 2018 г.

Решение в файле task_8_3.py

*************************************************************************************************

Задача #4
Конвертор азбуки Морзе.
Азбука Морзе представляет собой кодировку, где каждая буква алфавита, каждая цифра и различные
знаки препинания представлены серией точек и тире. Таблицы символов находятся в директории
'dop\'  morze_cade_global.png - Интернациональная, morze_cade_ru.png - Русская
Напишите программу, которая просит пользователя ввести строковое значение и затем преобразует
это строковое значение в кодировку азбуки Морзе.

Решение в файле task_8_4.py

*************************************************************************************************

Задача #5
Алфавитный переводчик номера телефона.
Многие компании используют телефонные номера наподобие 555-GET-FOOD, чтобы клиентам было легче
запомнить эти номера. На стандартном телефоне буквам алфавита поставлены в соответствии числа
следующим образом:
A, B и С = 2  /  D, E и F = 3  /  G, H и I = 4  /  J, K и L = 5
M, N и O = 6  /  P, Q, R и S = 7  /  T, U и V = 8  /  W, X, Y и Z = 9
Напишите программу, которая просит пользователя ввести 10-символьный номер телефона в формате
XXX-XXX-XXXX. Приложение должно показать номер телефона, в котором все буквенные символы в
оригинале переведены в их числовой эквивалент. Например, если пользователь вводит 555-GET-FOOD,
то приложение должно вывести номер 555-438-3663.

Решение в файле task_8_5.py

*************************************************************************************************

Задача #6
Среднее количество слов.
В файле 'text.txt' нем в каждой строке хранится одно предложение. Напишите программу, которая
читает содержимое файла и вычисляет среднее количество слов в расчете на предложение.
Файл находится в директории 'dop'

Решение в файле task_8_6.py

*************************************************************************************************

Задача #7
Анализ символов.
Файл 'text.txt' находится в директории 'dop'. Напишите программу, которая считывает содержимое
фала и определяет:
- количество букв в файле в верхнем регистре
- количество букв в файле в нижнем регистре
- количество цифр в файле
- количество пробельных символов в файле.

Решение в файле task_8_7.py

*************************************************************************************************

Задача #8
Корректор предложений.
Напишите программу с функцией, принимающей в качестве аргумента строковое значение и
возвращающей его копию, в котором первый символ каждого предложения написан в верхнем регистре.
Например, если аргументом является 'привет! меня зовут Джо. а как твое имя?', то эта функция
должна вернуть строковое значение 'Привет! Меня зовут Джо. А как твое имя?'. Программа должна
предоставлять пользователю возможность ввести строковое значение и затем передать его в функцию.
Модифицированное строковое значение должно быть передано на экран.

Решение в файле task_8_8.py

*************************************************************************************************

Задача #9
Гласные и согласные.
Напишите программу с функцией, которая в качестве аргумента принимает строковое значение и
возвращает количество содержащихся в нем гласных. Приложение должно иметь еще одну функцию,
которая в качестве арагумента принимает строковое значение и возвращает количество содержащих
в нем согласных. Приложение должно предоставлять пользователю возможность ввести строковое
значение и показать содержащееся в нем количество гласных и согласных.

Решение в файле task_8_9.py

*************************************************************************************************

Задача #10
Самый частотный символ.
Напишите программу, которая предоставляет пользователю возможность ввести строковое значение
и выводит на экран символ, который появляется в нем наиболее часто.

Решение в файле task_8_10.py

*************************************************************************************************

Задача #11
Разделитель слов.
Напишите программу, которая на входе принимает предложение, в котором все слова написаны без
пробелов, но первая буква каждого слова в верхнем регистре. Преобразуйте предложение в строковое
значение, в котором слова отделены пробелами, и только первое слово начинается с буквы в верхнем
регистре. Например, строковое значение 'ОстановисьИРочуствуйЗапахРоз' будет преобразовано в
'Остановись и почувствуй запах роз'

Решение в файле task_8_11.py

*************************************************************************************************

Задача #12
Молодежный жаргон.
Напишите программу, которая на входе принимает предложение и преобразует каждое его слово в
'молодежный жаргон'. В одной из его версий во время преобразования слова в молодежный жаргон
первая буква удаляется и становится в конец слова. Затем в конец слова добавляется срок 'ки'.
Вот пример:
Русский язык: ПРОСТАЛ ПОЧТИ ВСЮ НОЧЬ
Молодежный сленг: РОСПАЛПКИ ОЧТИПКИ СЮВКИ ОЧЬНКИ

Решение в файле task_8_12.py

*************************************************************************************************

Задача #13
Лотерея PowerBall.
Для того, что бы сыграть в лотерею PowerBall, покупают билет, в котором имеется пять чисел от
1 до 69 и число PowerBall в диапазоне от 1 до 26. (Эти числа можно выбрать самому либо дать
билетному автомату их выбрать за вас случайным образом.) Затем в заданный день автомат случайным
образом отбирает выигрышный ряд чисел. Если первые пять чисел совпадают с первыми пятью
выигрышными числами в любом порядке и ваше число PowerBall соответствует выигрышному числу
PowerBall, то вы выигрываете джек-пот, который составляет очень крупную сумму денег. Если
ваши числа совпадают лишь с некоторыми выигрышными числами, то вы выигрываете меньшую сумму в
зависимости от того, сколько выигрышных номеров совпало.
Файл 'pbnumbers.txt', содержит выигрышные номера PowerBall, которые были отобраны между 3
февраля 2010 года и 11 мая 2016 года (файл содержит 654 набора выигрышных числе). Каждая строка
в файле содержит набор из шести чисел, которые были выбраны в заданную дату. Числа разделены
пробелом, и последнее число в каждой строке является числом PowerBall для этого дня. Например,
первая строка в файле показывает числа за 3 февраля 2010 года, которые равнялись 17, 22, 36, 37,
52 и число PowerBall, равное 24.
Напишите одну или несколько программ, которые работаю с этим файлом и показывают:
 - 10 наиболее распространенных чисел, упорядоченных по частоте
 - 10 наименее распространенных чисел, упорядоченных по частоте
 - 10 наиболее 'созревших' чисел (чисел, которые не использовались долгое время), упорядоченных
от наиболее 'созревших' до наименее 'созревших'
 - частоту каждого числа от 1 до 69 и частоту каждого числа PowerBall - числа от 1 до 26.

Решение в файле task_8_13.py

*************************************************************************************************

Задача #14
Цены на бензин.
В файл 'dop\GasPrise.txt' содержит еженедельные средние цены за галон бензина в США, начиная
с 5 апреля 1993 года и заканчивая 26 августа 2013 года. Каждая строка в файле содержит среднюю
цену за галон бензина в указанный день и отформатирована следующим образом: ММ-ДД-ГГГГ:Цена
где ММ - двухзначный месяц, ДД - двухзначный день, ГГГГ - четырехзначный год, цена - это средняя
цена галона бензина в указанный день.
В рамках задания необходимо написать одну или несколько программ, которые считывают содержимое
данного файла и выполняют приведенные ниже вычисления.
 - средняя цена за год: Вычисляет среднюю цену бензина за каждый год, для каждого года в файле.
(Данный файл начинается в апреле 1993 года и заканчивается августом 2013 года. Используйте
данные, предоставленные за период с 1993 по 2013 год.)
 - Средняя цена за месяц: Вычисляет среднюю цену в каждом месяце в файле.
 - Наибольшая и наименьшая цена в году: в течении каждого года в файле определяет дату и величину
самой низкой и самой высокой цены.
 - Список цен, упорядоченный по возрастанию: генерирует текстовый файл, в котором даты и цены
отсортированы в возрастающем порядке.
 - Список цен, упорядоченный по убыванию: генерирует текстовый файл, в котором даты и цены
отсортированы в убывающем порядке.
Для выполнения этого задания можно написать одну программу или несколько программ, по одной для
каждого вычисления.

Решение в файле task_8_14.py

*************************************************************************************************