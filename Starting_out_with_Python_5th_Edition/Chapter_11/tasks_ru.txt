Данный файл содержит текст заданий раздела 'Упражнения по программированию' к главе 11:
'Наследование' книги: Начинаем программировать на Python. 5-е издание
Автор: Тони Гэддис

*************************************************************************************************

Задача #1: Классы Employee и ProductionWorker.

Напишите класс Employee (Сотрудник), который содержит атрибуты приведенных ниже данных:
 - имя сотрудника;
 - номер сотрудника.
Затем напишите класс ProductionWorker (Рабочий), который является подклассом класса Employee.
Класс ProductionWorker должен содержать атрибуты приведенных ниже данных:
 - номер смены (целое число, к примеру, 1 или 2);
 - ставка почасовой оплаты труда.
Рабочий день разделен на две смены: дневную и вечернюю. Атрибут смены будет содержать
целочисленное значение, представляющее смену, в которую сотрудник работает. Дневная смена
является сменой 1, вечерняя смена - сменой 2. Напишите соответствующие методы-получатели и
методы-мутаторы для каждого класса.
Затем напишите программу, которая создает объект класса ProductionWorker и предлагает
пользователю ввести данные по каждому атрибуту данных этого объекта. Сохраните данные в объекте и
примените в этом объекте методы-получатели, что бы получить эти данные и вывести из на экран.

Решение в файле 'task_11_1.py'

*************************************************************************************************

Задача #2: Класс ShiftSupervisor.

На некой фабрике начальник смены является штатным сотрудником, который руководит сменой. В
дополнение к фиксированному окладу начальник смены получает годовую премию за выполнение его
сменой производственного плана. Напишите класс ShiftSupervisor (Начальник смены), который
является подклассом класса Employee, созданного в задаче по программированию 1. Класс
ShiftSupervisor должен содержать атрибут данных для годового оклада и атрибут данных для годовой
производственной премии, которую заработал начальник смены. Продемонстрируйте класс, написав
программу, которая применяет объект ShiftSupervisor.

Решение в файле 'task_11_2.py'

*************************************************************************************************

Задача #3: Классы Person и Customer.

Напишите класс Person с атрибутами данных для имени, адреса и телефонного номера человека. Затем
напишите класс Customer (Клиент), который является подклассом класса Person. Класс Customer
должен иметь атрибут данных для номера клиента и атрибут булевых данных, указывающий, хочет ли
клиент быть в списке рассылки или нет. Продемонстрируйте экземпляр класса Customer в простой
программе.

Решение в файле 'task_11_3.py'

*************************************************************************************************